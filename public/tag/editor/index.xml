<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>きじとら</title>
    <link>http://kijtra.com/tag/editor/</link>
    <description>Webのこととかそのたもろもろ</description>
    <language>ja</language>
    <copyright>&amp;copy; kijtra.com</copyright>
    <lastBuildDate>Mon, 14 Sep 2015 12:45:29 +0900</lastBuildDate>
    <atom:link href="http://kijtra.com/tag/editor/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Cloud9を自サーバにインストールしてどこでもコーディング</title>
      <link>http://kijtra.com/article/cloud9-install</link>
      <pubDate>Mon, 14 Sep 2015 12:45:29 +0900</pubDate>
      
      <guid>http://kijtra.com/article/cloud9-install</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://c9.io/&#34;&gt;Cloud9&lt;/a&gt; はWebサービスとして提供されているオンラインIDEだけど、オープンソースなので自前のサーバー（さくらVPS等）にインストールしても使うことができるため、なんとなく使ってみた。&lt;/p&gt;

&lt;p&gt;今回は &lt;a href=&#34;http://vps.sakura.ad.jp/&#34;&gt;さくらインターネットのVPS&lt;/a&gt; で最安の 512プラン を持っていたので、そこで使ってみた。&lt;br /&gt;
OSは &lt;strong&gt;CentOS 6.7&lt;/strong&gt; ( &lt;code&gt;yum -update&lt;/code&gt; により6.6から6.7になった)。&lt;/p&gt;

&lt;p&gt;自前インストールだと &lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt; を使ってコマンドによりサーバーを立ち上げ、そこにアクセスして使うことになる。&lt;br /&gt;
でも使うたびに毎回サーバーを起動する必要があるので、最終的には &lt;strong&gt;立ち上げっぱなし&lt;/strong&gt; の状態にし、さらに &lt;strong&gt;サブドメイン下で動くように&lt;/strong&gt; したい。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Cloud9 SDK の公式Github&lt;br /&gt;
&lt;a href=&#34;https://github.com/c9/core/&#34;&gt;https://github.com/c9/core/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;https://lh3.googleusercontent.com/DHtYeKyOtH11NfO39XTaIZ4uEUGjbqCca5OFkjtU_Wyf5TWJYvFp56nO3AUpZOYIMCOGdQ4JDWf1iUqWxKrtPtLPnbqxzbaT54iieHat3kIk2re7zQGUSpOpPtrrRtyUMk9KYn8BMnO55s0nijQ3kfy2cCZ08NIBAl7NBWTIGd2OUfGW8Bo7ZL7ChwRoHpSFVf17Sh7LSVUPjcyC4cgGAemhDpdb7Yhu_6RtpMQflMLlkwi0xJayuW_3S1zNwqr1YsK-ihHGJAhgomDAY8YuMAwu3OanTYH8yXUGuFpaZIheKl3iFloNulJnIiSjiJEmiWidDg-O4d4o1i-YNFQkBfK69mD4w2lHAdZMMQeFjzUBzhJ5JXwXLXPt_kFS5KrMUUzCRzSDzG29DqlmzB_43qgaBNyEWkj9LSWNF__Kn7PU7bTdeuXRtzBchEEE5H2fr-q1QQB-yc7SZ5NHWt4uT3CEsSsL82lJQEF_-0B-z7R0eCR_JM0sBJDiHe3Ac3XSdbk4wMzCukKRtO0M0G2GG-UAeDM_BeNchno0QjNp5k8=w1570-h708-no&#34;&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/DHtYeKyOtH11NfO39XTaIZ4uEUGjbqCca5OFkjtU_Wyf5TWJYvFp56nO3AUpZOYIMCOGdQ4JDWf1iUqWxKrtPtLPnbqxzbaT54iieHat3kIk2re7zQGUSpOpPtrrRtyUMk9KYn8BMnO55s0nijQ3kfy2cCZ08NIBAl7NBWTIGd2OUfGW8Bo7ZL7ChwRoHpSFVf17Sh7LSVUPjcyC4cgGAemhDpdb7Yhu_6RtpMQflMLlkwi0xJayuW_3S1zNwqr1YsK-ihHGJAhgomDAY8YuMAwu3OanTYH8yXUGuFpaZIheKl3iFloNulJnIiSjiJEmiWidDg-O4d4o1i-YNFQkBfK69mD4w2lHAdZMMQeFjzUBzhJ5JXwXLXPt_kFS5KrMUUzCRzSDzG29DqlmzB_43qgaBNyEWkj9LSWNF__Kn7PU7bTdeuXRtzBchEEE5H2fr-q1QQB-yc7SZ5NHWt4uT3CEsSsL82lJQEF_-0B-z7R0eCR_JM0sBJDiHe3Ac3XSdbk4wMzCukKRtO0M0G2GG-UAeDM_BeNchno0QjNp5k8=w766-h345-no&#34; alt=&#34;Cloud9動作イメージ&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;必要なライブラリ等のインストール:e51332a40e06a9b8f867644b6f70fb4d&#34;&gt;必要なライブラリ等のインストール&lt;/h2&gt;

&lt;p&gt;Cloud9 のインストールに最低限必要なのは &lt;strong&gt;Python2.7以上&lt;/strong&gt; と &lt;strong&gt;glibc-static&lt;/strong&gt; というyumパッケージ。&lt;br /&gt;
その2つをインストールする。&lt;br /&gt;
※ Node.js周りのものはCloud9インストーラが勝手に入れてくれるので、自分で入れなくても良い&lt;/p&gt;

&lt;p&gt;まずは glibc-static 。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo yum install glibc-static
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次にPython。&lt;br /&gt;
少し手順が多いので下項で。&lt;/p&gt;

&lt;h3 id=&#34;python2-7-9のインストール:e51332a40e06a9b8f867644b6f70fb4d&#34;&gt;Python2.7.9のインストール&lt;/h3&gt;

&lt;p&gt;CentOS6 の yum リポジトリには Python2.6 までしかないため、どうしてもソースからインストールする必要がある。&lt;br /&gt;
また、すでに入っている Python2.6.6 はそのままにして、2.7 を別でインストールすることになる。&lt;/p&gt;

&lt;p&gt;いくつか調べると以下のサイト（英語）のインストール方法が一般的なようなので、基本的にこの通りにする。&lt;br /&gt;
&lt;a href=&#34;http://toomuchdata.com/2014/02/16/how-to-install-python-on-centos/&#34;&gt;http://toomuchdata.com/2014/02/16/how-to-install-python-on-centos/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;まず必須ライブラリのインストール。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo yum groupinstall &amp;quot;Development tools&amp;quot;
sudo yum install wget zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記参考サイトでは &lt;code&gt;wget&lt;/code&gt; が入っていないので追加している。（後ほど使うため）&lt;br /&gt;
また、ウチの環境では &lt;code&gt;yum groupinstall &amp;quot;Development tools&amp;quot;&lt;/code&gt; が、以下のようなメッセージが出て動かないような感じだった。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Warning: Group development does not have any packages.&lt;br /&gt;
No packages in any requested group available to install or update&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;それでもまあ最終的にCloud9を使えてるのでよしとするw&lt;/p&gt;

&lt;p&gt;次にライブラリのパスを設定する。&lt;br /&gt;
CentOS6 では、デフォルトで &lt;code&gt;/usr/bin/python&lt;/code&gt; にパスが通っているけど、Python2.7は &lt;code&gt;/usr/local/bin/python2.7&lt;/code&gt; というパスにインストールされる。&lt;br /&gt;
そのためPythonライブラリ群のパスを指定する必要があるらしく、 &lt;code&gt;/etc/ld.so.conf&lt;/code&gt; というファイルを編集する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo vi /etc/ld.so.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下のように記述する。（2行目が追記した部分）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;include ld.so.conf.d/*.conf
/usr/local/lib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記の設定を反映するコマンド。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo /sbin/ldconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次にPythonのソースをダウンロードしてインストール。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;wget http://python.org/ftp/python/2.7.9/Python-2.7.9.tar.xz
tar xf Python-2.7.9.tar.xz
cd Python-2.7.9
./configure --prefix=/usr/local --enable-unicode=ucs4 --enable-shared
make
sudo make altinstall
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最後の &lt;code&gt;altinstall&lt;/code&gt; が、Python2.6.6 とは別にインストールするという指示らしい。&lt;br /&gt;
わりと時間がかかるけど、終わったら念のためもう一度パス設定を反映する。&lt;br /&gt;
（これをやらないとパスが通らないことがあった）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo /sbin/ldconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストールされたか確認&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python2.7 -V
# 「Python 2.7.9」と出ればOK
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;cloud9-sdk-のインストール:e51332a40e06a9b8f867644b6f70fb4d&#34;&gt;Cloud9 SDK のインストール&lt;/h2&gt;

&lt;p&gt;手順は簡単だけど、注意点としては &lt;strong&gt;root権限ではインストールできない&lt;/strong&gt; という点。&lt;br /&gt;
&lt;code&gt;sudo -s&lt;/code&gt; とか &lt;code&gt;su -&lt;/code&gt; とかでrootに成っている場合は一般ユーザーに切り替える。&lt;/p&gt;

&lt;p&gt;その &lt;strong&gt;一般ユーザーのルートディレクトリでインストールする&lt;/strong&gt; ので、ディレクトリ移動。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd ~
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;それと、もう一つ注意点としてシェルが日本語になっているとうまくいかない。&lt;br /&gt;
念のため確認して英語にしておく。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo vi /etc/sysconfig/i18n
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下のように記述&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;LANG=&amp;quot;en_US.UTF-8&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;やっと本体インストール。&lt;br /&gt;
GitでSDKを &lt;code&gt;c9sdk&lt;/code&gt; というディレクトリにダウンロードする。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone git://github.com/c9/core.git c9sdk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ダウンロードフォルダに移動して・・・&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd c9sdk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストーラを実行&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;scripts/install-sdk.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これもかなり時間がかかるけど、成功すると以下のようなメッセージが出る。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Success!
run &amp;lsquo;node server.js -p 8080 -a :&amp;rsquo; to launch Cloud9&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;node server.js -p 8080 -a :&lt;/code&gt; というコマンドで立ち上げできるよ！というメッセージだけど、今はまだ無視。&lt;/p&gt;

&lt;h2 id=&#34;サブドメインでアクセスできるようにする:e51332a40e06a9b8f867644b6f70fb4d&#34;&gt;サブドメインでアクセスできるようにする&lt;/h2&gt;

&lt;p&gt;Cloud9を立ち上げると、そのままでは &lt;strong&gt;&lt;a href=&#34;http://XXX.XXX.XXX.XXX:8080&#34;&gt;http://XXX.XXX.XXX.XXX:8080&lt;/a&gt;&lt;/strong&gt; というようなアドレスでしかアクセスできない。&lt;br /&gt;
なので、&lt;strong&gt;&lt;a href=&#34;http://c9.example.com&#34;&gt;http://c9.example.com&lt;/a&gt;&lt;/strong&gt; といったURLでアクセスできるようにする。&lt;/p&gt;

&lt;h3 id=&#34;apacheの場合:e51332a40e06a9b8f867644b6f70fb4d&#34;&gt;Apacheの場合&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;&amp;lt;VirtualHost *:80&amp;gt;
    ServerName c9.example.com
    ProxyPass / http://127.0.0.1:8080/
    ProxyPassReverse / http://127.0.0.1:8080/
    ProxyPreserveHost On
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;nginxの場合:e51332a40e06a9b8f867644b6f70fb4d&#34;&gt;Nginxの場合&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;server {
    listen       80;
    server_name  c9.example.com;

    location / {
        proxy_pass   http://127.0.0.1:8080;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;cloud9-ide-起動:e51332a40e06a9b8f867644b6f70fb4d&#34;&gt;Cloud9 IDE、起動！&lt;/h2&gt;

&lt;p&gt;ここまでがわりと長い・・・。&lt;/p&gt;

&lt;p&gt;起動コマンドは以下のような感じ。&lt;br /&gt;
オプションについては&lt;a href=&#34;https://github.com/c9/core/#starting-cloud9&#34;&gt;公式GitHubに説明がある&lt;/a&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;node ~/c9sdk/server.js -p 8080 -w ~/public/ -a username:password
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ひとつずつ説明すると、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; ・・・ Node.js使用コマンド&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;~/c9sdk/server.js&lt;/code&gt;&lt;/strong&gt; ・・・ サーバー起動スクリプト&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-p 8080&lt;/code&gt;&lt;/strong&gt; ・・・ 使用するポート&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-w ~/public/&lt;/code&gt;&lt;/strong&gt; ・・・ 「~/public/」以下のディレクトリがCloud9管理対象&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-a username:password&lt;/code&gt;&lt;/strong&gt; ・・・ Basic認証する場合の ID:パスワード&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といったコマンド。&lt;br /&gt;
これで &lt;code&gt;http://c9.example.com&lt;/code&gt; にアクセスするとIDEが起動するはず。&lt;/p&gt;

&lt;p&gt;ちなみに編集権限のないディレクトリ内のは当然編集できない。&lt;br /&gt;
なので、サーバーの別ユーザーのディレクトリを編集したい場合は、そのユーザーでログインしてCloud9をインストールする必要がある。&lt;/p&gt;

&lt;p&gt;ちなみにIDEの設定などは &lt;code&gt;~/.c9/&lt;/code&gt; というディレクトリに保存される。&lt;br /&gt;
SASS とか LESS とかの &lt;a href=&#34;https://cloud9-sdk.readme.io/docs/builders&#34;&gt;Builderスクリプト&lt;/a&gt; とか使う場合はそこに設定ファイルを保存することになる。&lt;/p&gt;

&lt;p&gt;起動が確認できたら、いったんサーバーを落として（&lt;kbd&gt;Ctrl + C&lt;/kbd&gt;）、下記立ち上げっぱなしにする設定に進む。&lt;/p&gt;

&lt;h2 id=&#34;node-forever-で立ち上げっぱなしにする:e51332a40e06a9b8f867644b6f70fb4d&#34;&gt;「node forever」で立ち上げっぱなしにする&lt;/h2&gt;

&lt;p&gt;npmが入っていない場合は入れる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo yum install npm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;forever をグローバルインストールする。&lt;br /&gt;
（グローバルである必要はない）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo npm install forever -g
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;forever を使って Cloud9 IDE を起動&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;forever start ~/c9sdk/server.js -w /home/kijtra/public/dev -p 8080 -a username:password
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下のように出れば起動中。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;info: Forever processing file: /home/example/c9sdk/server.js
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;実行中ものをの表示したい場合&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;forever list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cloud9 IDE を停止する場合&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;forever stop ~/c9sdk/server.js
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;以上だけど、Pythonのインストールあたりからわりと試行錯誤でやっと成功した感じ。&lt;br /&gt;
&lt;a href=&#34;https://virtualenv.pypa.io/en/latest/&#34;&gt;virtualenv&lt;/a&gt; とか使ったりしたけど、うまくいかなかった。&lt;br /&gt;
また、Cloud9自体が使っている人がほとんどいないので苦労した。&lt;br /&gt;
でも &lt;a href=&#34;http://sass-lang.com/&#34;&gt;SASS&lt;/a&gt; や &lt;a href=&#34;http://lesscss.org/&#34;&gt;LESS&lt;/a&gt; 、&lt;a href=&#34;http://coffeescript.org/&#34;&gt;CofeeScript&lt;/a&gt; のコンパイルができて、しかも &lt;strong&gt;&lt;a href=&#34;http://emmet.io/&#34;&gt;Emmet&lt;/a&gt;&lt;/strong&gt; にも対応しているのはびっくりした。&lt;br /&gt;
「SublimeText Mode」なるものもあり、見た目や動作を &lt;a href=&#34;http://www.sublimetext.com/&#34;&gt;SublimeText&lt;/a&gt; そっくりにすることもできる。&lt;br /&gt;
個人サイトなんかはすべてブラウザで完結できそう。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>いま入れてるAtomプラグイン（パッケージ）メモ（2015年5月）</title>
      <link>http://kijtra.com/article/my-atom-packages</link>
      <pubDate>Mon, 25 May 2015 23:00:00 +0900</pubDate>
      
      <guid>http://kijtra.com/article/my-atom-packages</guid>
      <description>&lt;p&gt;最近はSublime Textと併用してAtomもわりと使っていて、プラグイン（パッケージ）探しが落ち着いてきたのでメモしておく。&lt;/p&gt;

&lt;p&gt;基本的にWeb系＋PHPの開発が多いのと、環境がWindowsなので、そのような傾向にある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/emmet&#34;&gt;emmet&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
HTML等を簡単な記述でコーディングできるプラグイン。&lt;br /&gt;
他のエディタもすべて必ず入れてる。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/minimap&#34;&gt;minimap&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
エディタの横にファイルの全体像を表示する。スクロールバー代わりに便利。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/japanese-wrap&#34;&gt;japanese-wrap&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
日本語の文章がウインドウの端で改行されるようにする。Atomのv0.201.0時点でも公式対応されていないので必要。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/atom-color-highlight&#34;&gt;atom-color-highlight&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
コード中のCSSカラーっぽい文字を検出して背景にその色を表示してくれる。&lt;br /&gt;
Sublime Textの&lt;a href=&#34;https://packagecontrol.io/packages/Color%20Highlighter&#34;&gt;Color Highlighter&lt;/a&gt;が便利だったので同等のものを。&lt;br /&gt;
&lt;img src=&#34;https://i.github-camo.com/c3aaeeee1875bec435e468f58357becbac26367a/68747470733a2f2f7261772e6769746875622e636f6d2f61626533332f61746f6d2d636f6c6f722d686967686c696768742f6d61737465722f61746f6d2d636f6c6f722d686967686c696768742d7661726961626c65732e676966&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/project-manager&#34;&gt;project-manager&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
プロジェクトを管理するプラグイン。デフォルト機能にしてほしい。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/open-last-project&#34;&gt;open-last-project&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Atom起動時、最後に開いていたプロジェクトを開くプラグイン。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/atom-terminal&#34;&gt;atom-terminal&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
いま開いているプロジェクトのディレクトリでターミナル系アプリを起動するプラグイン。&lt;br /&gt;
ちなみに個人的に&lt;a href=&#34;https://conemu.github.io/&#34;&gt;ConEmu&lt;/a&gt;でGit Bashをメインに使っている。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/linter&#34;&gt;linter&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
コードのリアルタイムエラー検出。これ単体では意味がなく、以下のように言語ごとに用意する。

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/linter-jshint&#34;&gt;linter-jshint&lt;/a&gt; JavaScript用。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/linter-less&#34;&gt;linter-less&lt;/a&gt; LESS用。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/linter-php&#34;&gt;linter-php&lt;/a&gt; PHP用。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/chary-tree-view&#34;&gt;chary-tree-view&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
左サイドのファイルツリーで、シングルクリックのプレビューを表示しないプラグイン。&lt;br /&gt;
Atomではファイルツリーのシングルクリックでプレビューとして開く仕様になっているけど、個人的にこれがけっこうストレスで、Minifyされたファイルや巨大ファイル（2MBの制限はあるけど）をクリックしてしまうとAtomがフリーズすることがちょこちょこあった。（流行りなのか、他のエディタでもそういう傾向があるみたい）&lt;br /&gt;
オフにしたくて&lt;a href=&#34;http://ja.stackoverflow.com/q/10485/3876&#34;&gt;StackOverflowで質問してみた&lt;/a&gt;ところ、心優しい人が速攻で作ってくれたもの。有り難し。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/git-plus&#34;&gt;git-plus&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
ターミナル系アプリを使わなくてもGitコマンドを使えるプラグイン。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/git-control&#34;&gt;git-control&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
GitをGUIで操作するプラグイン。簡易&lt;a href=&#34;https://www.sourcetreeapp.com/&#34;&gt;SourceTree&lt;/a&gt;のようなもの。&lt;br /&gt;
基本的にGitの状態をざっと確認するのに使ってる。&lt;br /&gt;
&lt;img src=&#34;https://i.github-camo.com/e35620a073ae64498e9dbff837aa273d3dcb263d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6a61636f67722f61746f6d2d6769742d636f6e74726f6c2f6d61737465722f73637265656e73686f74732f6769742d30312e706e67&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/less-autocompile&#34;&gt;less-autocompile&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
LESSファイルの保存時にCSSにコンパイルする。（npmでlessをインストールしておく必要あり）&lt;br /&gt;
個人的にSASSやSCSSよりLESSを使うことが多いので。&lt;br /&gt;
このプラグインはファイル監視系ではなく、.lessファイルの1行目に出力先ファイル名や圧縮有無、ソースマップ有無などをコメントとして書くだけなので手軽で自由が効く。&lt;br /&gt;
SASSな人は「&lt;a href=&#34;https://atom.io/packages/sass-autocompile&#34;&gt;sass-autocompile&lt;/a&gt;」が同じ機能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/tool-bar&#34;&gt;tool-bar&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
エディタの上下左右好きなところにボタンを設置する。基本的にメインメニューやコマンドパレットのショートカット。&lt;br /&gt;
次項目のflex-tool-barと組み合わせて好きなボタンが入れられる。&lt;br /&gt;
&lt;img src=&#34;https://i.github-camo.com/8387595328108e1dce2b658a6827140047e286e9/687474703a2f2f636c2e6c792f696d6167652f3277307533633178314b33572f53637265656e73686f742d323031352d30342d32312d31362e34362e34392e706e67&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/flex-tool-bar&#34;&gt;flex-tool-bar&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
上記tool-barに依存したプラグイン。好きなアイコン＆コマンドでボタンを設置できる。&lt;br /&gt;
普通のURLでリンクも貼れるし、そのURL機能を使ってアプリのショートカットにもできる。&lt;br /&gt;
設定はAtomの設定フォルダ（~/.atom）の直下に &lt;code&gt;toolbar.json&lt;/code&gt; というファイルを作って、そこに書く。&lt;br /&gt;
例として&lt;a href=&#34;https://gist.github.com/kijtra/6b74e2decc14cbbde01a&#34;&gt;個人的な設定をGistに書いておいた&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/script&#34;&gt;script&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
コードの一部を選択してこのプラグインを使うと、その部分のコードを実行してくれる。いろんな言語に対応してて便利。&lt;br /&gt;
PHPでUNIX時間をDateTimeにしたりとかよく使う。&lt;br /&gt;
&lt;img src=&#34;https://i.github-camo.com/405fb492595dd819647af375b68c716fd862ee80/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f313639343035352f333232363230312f63343538616362632d663036372d313165332d383461302d6461323766653333346635652e676966&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/php-documentation-online&#34;&gt;php-documentation-online&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
PHP者用。コード中の関数にカーソルを合わせて &lt;kbd&gt;F4&lt;/kbd&gt; キーで公式ドキュメントが表示される。&lt;br /&gt;
デフォルトでは英語版なので、ソースを書き換えて日本語版に飛ぶようにしてる。&lt;br /&gt;
設定場所はプラグインのフォルダ内 &lt;code&gt;lib/php-documentation-online.coffee&lt;/code&gt; の28行目、
&lt;code&gt;http://php.net/manual/en/&lt;/code&gt; → &lt;code&gt;http://php.net/manual/ja/&lt;/code&gt; に。&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://atom.io/packages/SFTP-deployment&#34;&gt;SFTP-deployment&lt;/a&gt;&lt;/del&gt;&lt;br /&gt;
&lt;del&gt;(S)FTPでサーバーにアップ＆ダウンロードできる。Windowsだとダウンロードが不安定だったりdeprecationのコード使ってたりで今のところあまり実用的じゃない。&lt;br /&gt;
けどアップデート待ちで一応入れてる。&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/remote-ftp&#34;&gt;Remote-FTP&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
上の SFTP-Deploymentはやはり不安定すぎるのでこちらに変更した。&lt;br /&gt;
リモートファイル用のサイドバーが出るので確認がしやすく、Atom 1.0 にも対応している。
&lt;img src=&#34;https://i.github-camo.com/719a05ed4e28c2224f52b30ab08bd2d8e6af8a58/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d6772656e6965722f72656d6f74652d6674702f6d61737465722f73637265656e73686f742e706e67&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/language-nginx&#34;&gt;language-nginx&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
nginxのconfファイルのシンタックスハイライト。完全な感じではない。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atom.io/packages/language-apache&#34;&gt;language-apache&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Apache系（htaccessなど）のシンタックスハイライト。公式に取り込んでほしい。&lt;/li&gt;
&lt;li&gt;ちなみにテーマは &lt;a href=&#34;https://atom.io/themes/seti-ui&#34;&gt;Seti-ui&lt;/a&gt; を使ってる。（&lt;a href=&#34;https://atom.io/packages/file-icons&#34;&gt;file-icons&lt;/a&gt;を使わなくてもいいので）&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Atomはまだ起動が遅かったりプラグインの完成度が高くなかったりするけど、少し使い慣れてきたので継続してみる。&lt;br /&gt;
来月（2015年6月）にはメジャーバージョンになるっぽいので期待してる。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sublime Text 3 のインストール～設定メモ</title>
      <link>http://kijtra.com/article/sublime-text-3-install-and-settings</link>
      <pubDate>Fri, 04 Jul 2014 12:07:00 +0900</pubDate>
      
      <guid>http://kijtra.com/article/sublime-text-3-install-and-settings</guid>
      <description>

&lt;p&gt;Sublime Text 3 のインストールから基本設定、各プラグイン導入までの個人的メモ。&lt;/p&gt;

&lt;h2 id=&#34;開発バージョンをダウンロード:73589e8d2639747e5931f20bd3d44061&#34;&gt;開発バージョンをダウンロード&lt;/h2&gt;

&lt;p&gt;巷では Sublime Text の &lt;a href=&#34;http://www.sublimetext.com/2&#34;&gt;バージョン2&lt;/a&gt; を使っている人が多いようだけど、バージョン &lt;strong&gt;3&lt;/strong&gt; を使う。&lt;br /&gt;
バージョン3の方が起動など動作が速く、サイドバーのファイルアイコン(あとで「テーマ」の部分で紹介)に対応してる。&lt;/p&gt;

&lt;p&gt;現時点(2014/07/05)では Build 3062 が最新だった。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.sublimetext.com/3dev&#34;&gt;Sublime Text Dev Builds&lt;/a&gt;&lt;/strong&gt; &lt;a href=&#34;http://www.sublimetext.com/3dev&#34;&gt;http://www.sublimetext.com/3dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ちなみに Portable Version を Dropbox に入れて使ってる。&lt;/p&gt;

&lt;h2 id=&#34;まずは-package-control-をインストール:73589e8d2639747e5931f20bd3d44061&#34;&gt;まずは「Package Control」をインストール&lt;/h2&gt;

&lt;p&gt;Sublime Text をはじめて起動したら、まずはこれを入れる。&lt;br /&gt;
&lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/&#34;&gt;Package Control&lt;/a&gt;&lt;/strong&gt; &lt;a href=&#34;https://sublime.wbond.net/&#34;&gt;https://sublime.wbond.net/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;インストール手順は、Sublime Text を起動し、&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;`&lt;/kbd&gt;(&lt;kbd&gt;@&lt;/kbd&gt;キー) を押してコンソールを表示させ、公式コードをそのままコピー＆ペーストして &lt;kbd&gt;Enter&lt;/kbd&gt;。&lt;br /&gt;
コピーするコードは &lt;a href=&#34;https://sublime.wbond.net/installation&#34;&gt;ここのページのもの(「SUBLIME TEXT 3」のタブ内)を使用する&lt;/a&gt; 。&lt;br /&gt;
※上記ページに「コードの再配布はするな」と書いてあるのでここには書けない&lt;/p&gt;

&lt;h2 id=&#34;プラグイン:73589e8d2639747e5931f20bd3d44061&#34;&gt;プラグイン&lt;/h2&gt;

&lt;p&gt;プラグインはなるべく Package Control で入れられるものに限定したい。&lt;br /&gt;
各プラグインのインストールは、 Sublime Text 起動時に　&lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;P&lt;/kbd&gt; でコマンドリストを表示させ、「Package Control: Install Package」を探して &lt;kbd&gt;Enter&lt;/kbd&gt;。&lt;br /&gt;
コマンドリストの検索窓に「 &lt;span style=&#34;font-family:serif&#34;&gt;&lt;strong&gt;I&lt;/strong&gt;&lt;/span&gt; 」を入力して、そこから探して &lt;kbd&gt;Enter&lt;/kbd&gt; しておくと、次回からは「&lt;span style=&#34;font-family:serif&#34;&gt;I&lt;/span&gt;」検索で「Package Control: Install Package」が最初に出るのでなるべくやっておく。&lt;br /&gt;
「Package Control: Install Package」を &lt;kbd&gt;Enter&lt;/kbd&gt; したら Package Control のサーバーから一覧が読み込まれるので、以下の各プラグイン名で検索して &lt;kbd&gt;Enter&lt;/kbd&gt; するとインストールされる。&lt;/p&gt;

&lt;h3 id=&#34;おすすめ系:73589e8d2639747e5931f20bd3d44061&#34;&gt;おすすめ系&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/packages/Emmet&#34;&gt;Emmet&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&#34;https://code.google.com/p/zen-coding/&#34;&gt;Zen Coding&lt;/a&gt; の進化系。コーディングする人は必須で覚えた方がいい。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/packages/SideBarEnhancements&#34;&gt;SidebarEnhancements&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Sublime Text のサイドバーでの右クリック項目を拡張してくれる。&lt;br /&gt;
例えば「このファイルを指定のアプリケーションで開く(Open With&amp;hellip;)」とか「実行する(Open/Run)」とか、デフォルトでは付いていないので。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/packages/ConvertToUTF8&#34;&gt;ConvertToUTF8&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
マルチバイト文字が含まれるファイルをUTF8に変換して表示。&lt;br /&gt;
デフォルトでは Shift-JIS とか文字化けしたりするので、とりあえず入れておく。&lt;br /&gt;
絶対に UTF-8 しか扱わない自信があればいらないかも。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/packages/BracketHighlighter&#34;&gt;BracketHighlighter&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
HTMLの開始タグ～終了タグや、コードのカッコのペアをわかりやすく表示してくれる。&lt;br /&gt;
この終了タグってどのdivだ？みたいなのに無駄な時間を取られないようにしたい。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/packages/IMESupport&#34;&gt;IMESupport&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Windowsのみ。 Sublime Text デフォルト状態では日本語入力変換がウインドウ左下の方に表示されるため視点が定まらないけど、これを入れるとキャレットの部分で表示されて便利。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/packages/SFTP&#34;&gt;SFTP&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Sublime Text 単体で(S)FTPできるプラグイン。有料($20)だけど、度々出る警告を無視できるならとりあえずは無料で使い続けられる(機能の制限は特に無い)。
SFTPと公開鍵認証に対応してるのはこのプラグインぐらいしかないので、自己投資と思って買ってしまうのがおすすめ。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/packages/SublimeLinter&#34;&gt;Sublime​Linter&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
コードの間違いを警告してくれるプラグイン。言語ごとに Sublime​Linter プラグインがあって、これはその基板となるプラグインなので入れておく。&lt;br /&gt;
言語ごとのものは &lt;a href=&#34;https://sublime.wbond.net/search/SublimeLinter&#34;&gt;検索すると希望のものが見つかるはず&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;個人的に必要系:73589e8d2639747e5931f20bd3d44061&#34;&gt;個人的に必要系&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/packages/Diffy&#34;&gt;Diffy&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
2つのファイルの差分を表示してくれるプラグイン。&lt;br /&gt;
Sublime Text で &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;2&lt;/kbd&gt;(&lt;kbd&gt;&amp;ldquo;&lt;/kbd&gt;) を押してウインドウを分割して比較したいファイルを開き、&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;K&lt;/kbd&gt; + &lt;kbd&gt;D&lt;/kbd&gt;で差分がハイライトされる。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/packages/ApacheConf.tmLanguage&#34;&gt;ApacheConf.tmLanguage&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Apache系の .conf ファイルや .htaccess なんかをシンタックスハイライトしてくれるプラグイン。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/packages/Git&#34;&gt;Git&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
コマンドウインドウからGit系コマンドが実行できる。&lt;br /&gt;
単体で動くものではなく、 &lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt; 自体がインストールされていて、かつパスが通ってる必要がある。&lt;br /&gt;
コミット時のコメントがわかりにくい。コミットコマンドを打つと Sublime Text で新規タブが開くので、その一番上にコメントを書いて「保存せずタブを閉じる」。&lt;br /&gt;
ちなみに日本語でコメントすると動かないので注意。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/packages/OmniMarkupPreviewer&#34;&gt;Omni​Markup​Previewer&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Markdown をブラウザでリアルタイムプレビューしてくれるプラグイン。Markdown をHTMLに変換できたりもする。&lt;br /&gt;
このブログは Markdown で書いており、プレビュー具合もいい(特にコード部分のシンタックスハイライトとか)ので個人的に便利。&lt;br /&gt;
ちなみに Sublime Text はデフォルトで Markdown をシンタックスハイライトしてくれないので、別途カラースキーマをインストールする必要がある(「テーマ」の部分で紹介)。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/packages/LESS&#34;&gt;LESS&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
LESSファイルのシンタックスハイライト用プラグイン。&lt;br /&gt;
SASSよりLESSの方が使う頻度が高いので。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上記以外は状況によって。&lt;br /&gt;
&lt;a href=&#34;https://sublime.wbond.net/packages/Vagrant&#34;&gt;Vagrant&lt;/a&gt; とか &lt;a href=&#34;https://sublime.wbond.net/packages/Compass&#34;&gt;Compass&lt;/a&gt; とか &lt;a href=&#34;https://sublime.wbond.net/packages/Terminal&#34;&gt;Terminal&lt;/a&gt; とかは便利かも。&lt;/p&gt;

&lt;h2 id=&#34;追加設定:73589e8d2639747e5931f20bd3d44061&#34;&gt;追加設定&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://brdr-mmrndm.tumblr.com/post/80456872825/sublime-text&#34;&gt;こちらのページ&lt;/a&gt;にあるように、
メニューの「Preferences -&amp;gt; Settings - User」を開いて、 &lt;code&gt;draw_indent_guides&lt;/code&gt;、 &lt;code&gt;indent_guide_options&lt;/code&gt;、 &lt;code&gt;match_brackets&lt;/code&gt; の設定を追記するとさらに見やすくなる。&lt;br /&gt;
また、そのほか上からデフォルトでない設定。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;font_face&amp;quot;: &amp;quot;Consolas&amp;quot;&lt;/code&gt;&lt;br /&gt;
個人的にフォントは Consolas にしてる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;bold_folder_labels&amp;quot;: true&lt;/code&gt;&lt;br /&gt;
サイドバーのフォルダ名を太字にして区別しやすくする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;word_wrap&amp;quot;: true&lt;/code&gt;&lt;br /&gt;
ウインドウの端で折り返す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;preview_on_click&amp;quot;: false&lt;/code&gt;&lt;br /&gt;
サイドバーでのファイルクリック時にいちいちファイルが開く動作が困る(大きいファイルなど)のでオフに&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;highlight_line&amp;quot;: true&lt;/code&gt;&lt;br /&gt;
編集してる行をハイライトする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;draw_white_space&amp;quot;: &amp;quot;all&amp;quot;&lt;/code&gt;
常に半角スペースを「・」で表示(デフォルトはテキスト選択時のみ)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;atomic_save&amp;quot;: true&lt;/code&gt;&lt;br /&gt;
保存時に一時ファイルを使う(?)ような機能みたいだけど、他のアプリケーションで同時に開けなかったりするのでオフに&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
	&amp;quot;draw_indent_guides&amp;quot;: true,
	&amp;quot;indent_guide_options&amp;quot;: [&amp;quot;draw_normal&amp;quot;, &amp;quot;draw_active&amp;quot;],
	&amp;quot;match_brackets&amp;quot;: false,

	&amp;quot;font_face&amp;quot;: &amp;quot;Consolas&amp;quot;,
	&amp;quot;bold_folder_labels&amp;quot;: true,
	&amp;quot;word_wrap&amp;quot;: true,
	&amp;quot;preview_on_click&amp;quot;: false,
	&amp;quot;highlight_line&amp;quot;: true,
	&amp;quot;draw_white_space&amp;quot;: &amp;quot;all&amp;quot;,
	&amp;quot;atomic_save&amp;quot;: true
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;テーマ:73589e8d2639747e5931f20bd3d44061&#34;&gt;テーマ&lt;/h2&gt;

&lt;p&gt;去年あたりからコード書く場合はダーク系テーマが見やすいと気づいた。&lt;br /&gt;
Sublime Text は「テーマ」が枠のデザイン(サイドバーとかタブとか)で、「カラースキーマ」は入力部分の見た目となっていて、それぞれ違うものが使えるので好みによって。&lt;br /&gt;
&lt;a href=&#34;https://lh5.googleusercontent.com/-niyXuM4iVM0/U7YOktcwN7I/AAAAAAAADbE/jJ8Pr9ooV2s/w232-h190-no/2014-07-04_111638.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://lh5.googleusercontent.com/-niyXuM4iVM0/U7YOktcwN7I/AAAAAAAADbE/jJ8Pr9ooV2s/w232-h190-no/2014-07-04_111638.png&#34; align=&#34;right&#34; hspace=&#34;10&#34; alt=&#34;Sublime Text のファイルアイコン&#34;&gt;&lt;/a&gt; テーマでは &lt;a href=&#34;https://sublime.wbond.net/packages/Theme%20-%20Flatland&#34;&gt;Flatland&lt;/a&gt; とか &lt;a href=&#34;https://sublime.wbond.net/packages/Theme%20-%20Soda&#34;&gt;Soda&lt;/a&gt; とかがカッコいいので人気みたいだけど、&lt;br /&gt;
個人的に「ファイルアイコン」が表示できるものを必要条件としているため、以下のテーマを使ってる。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/packages/Theme%20-%20Aprosopo&#34;&gt;Aprosopo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ファイルアイコンというのは Sublime Text 3 の 開発版 Build 3062 から導入されたもので、これまでサイドバーのアイコンはフォルダにしか表示されなかったけど、各ファイルにもアイコンが表示できるようになった機能。&lt;br /&gt;
拡張子ごとにアイコンが変わったりするので見やすくなる。&lt;br /&gt;
これまでフォルダとファイルの階層のインデントが少しわかりにくくて誤操作も多かったんだけど、この機能で解消された。&lt;br /&gt;
前述した Flatland とか Soda とかはまだこの機能に対応してないのが惜しい。&lt;/p&gt;

&lt;p&gt;Aprosopo はダークテーマとライトテーマがあって、しかも設定が Preferences メニューから簡単に変えられる(いちいち設定ファイルに書かなくてもいい)ので気に入ってる。&lt;/p&gt;

&lt;h2 id=&#34;カラースキーマ:73589e8d2639747e5931f20bd3d44061&#34;&gt;カラースキーマ&lt;/h2&gt;

&lt;p&gt;これは完全に好みや気分。&lt;br /&gt;
いまは &lt;strong&gt;&lt;a href=&#34;https://sublime.wbond.net/packages/Theme%20-%20Cobalt2&#34;&gt;Cobalt2&lt;/a&gt;&lt;/strong&gt; の背景色をカスタマイズしたものを使ってる。&lt;br /&gt;
Cobalt2 は Markdown にも対応してて、PHP なんかも見やすい。(リンク先で見た目のキャプチャ見れます)&lt;br /&gt;
ちなみに色のカスタマイズは &lt;a href=&#34;https://sublime.wbond.net/packages/ColorSchemeEditor&#34;&gt;Color​Scheme​Editor&lt;/a&gt; を使うと手軽に変更できる。&lt;br /&gt;
(しょっちゅう使うものでもないのでプラグインで紹介してない)&lt;/p&gt;

&lt;p&gt;気分でよく変える人なんかは &lt;a href=&#34;https://sublime.wbond.net/packages/Dayle%20Rees%20Color%20Schemes&#34;&gt;Dayle Rees Color Schemes&lt;/a&gt; のプラグインが便利。&lt;br /&gt;
このプラグインはインストールすると &lt;a href=&#34;http://daylerees.github.io/&#34;&gt;たくさんのカラースキーマ&lt;/a&gt; が一括インストールされるので、好みのものが見つかるはず。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sublime Text 2 のPortable版でSASSをスタンドアローンで使う</title>
      <link>http://kijtra.com/article/sublime-text-2-sass-standalone</link>
      <pubDate>Fri, 26 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>http://kijtra.com/article/sublime-text-2-sass-standalone</guid>
      <description>

&lt;p&gt;Sublime Text 2 をportable版で使ってて、SASSもRubyとか入れずにポータブルにできないかと思ったら、そういうソフトを見つけたので設定メモ（Windowsのみ）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sublimetext.com/&#34; target=&#34;_blank&#34;&gt;Sublime Text 2&lt;/a&gt; 便利ですよね。
もうデフォルトのテキストエディタにしてしまいたいところだけど、メモとかには少し重いんで未だに秀丸と併用中。
Sublime Text 2 には&lt;a href=&#34;http://www.sublimetext.com/2&#34; target=&#34;_blank&#34;&gt;portable版&lt;/a&gt;というのがあって、USBメモリとかに突っ込んで使えるので、自分の場合はDropboxに入れて他の環境でも同じものを使っています。&lt;/p&gt;

&lt;p&gt;で、Sublime Text 2 で SASS を使う時、通常はRubyをインストールしてgemで・・・みたいな流れになるけど、portable版を使っているのでSASSもポータブルにできないかなぁと思って調べてみたところ、あるもんですね。
とりあえず「Sublime Textって？」「SASSって？」というのは割愛です。（&amp;rdquo;SASSって&amp;rdquo; てなんか・・・）&lt;/p&gt;

&lt;p&gt;zausさんという人が「Sassifier」というソフトを作ってるので、それを使用。
以下はその説明ページ。
&lt;a href=&#34;http://drzaus.com/snippet/standalone-scss-compiler-for-sass-in-sublime-text-2&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Standalone SCSS compiler for SASS in Sublime Text 2&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;試した環境については以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Windows 7&lt;/li&gt;
&lt;li&gt;Sublime Text 2 ver 2.0.2 (portable)&lt;/li&gt;
&lt;li&gt;プラグインは &lt;a href=&#34;http://wbond.net/sublime_packages/package_control&#34; target=&#34;_blank&#34;&gt;Package Control&lt;/a&gt; のみの状態&lt;/li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;必要なソフトのダウンロード:35c0bb3004c21201b933a52151593fd0&#34;&gt;必要なソフトのダウンロード&lt;/h2&gt;

&lt;p&gt;まずは「Sassifier」をダウンロード。&lt;/p&gt;

&lt;p&gt;前述の&lt;a href=&#34;http://drzaus.com/snippet/standalone-scss-compiler-for-sass-in-sublime-text-2&#34; target=&#34;_blank&#34;&gt;zausさんのエントリー&lt;/a&gt;の中ほどにある「&lt;strong&gt;standalone executable: Sassifier-v1p2-addin.7z&lt;/strong&gt;」というリンクをクリック。
&lt;a href=&#34;http://lh4.ggpht.com/-zStLRjxrMCs/UfIq1gU_K-I/AAAAAAAADUw/R3SsUjudaaY/s570/2013-07-26_161328.png&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;aligncenter&#34; alt=&#34;Sassiferをダウンロード&#34; src=&#34;http://lh4.ggpht.com/-zStLRjxrMCs/UfIq1gU_K-I/AAAAAAAADUw/R3SsUjudaaY/s570/2013-07-26_161328.png&#34; /&gt;&lt;/a&gt;
ダウンロードされる拡張子が「.txt」になっているので、それを削って「&lt;strong&gt;.7z&lt;/strong&gt;」に変更。
すると「Sassifier」というフォルダができるので、ひとまず必要なものはこれだけ。&lt;/p&gt;

&lt;h2 id=&#34;設定とインストール:35c0bb3004c21201b933a52151593fd0&#34;&gt;設定とインストール&lt;/h2&gt;

&lt;p&gt;次に Sublime Text 2 を起動。&lt;/p&gt;

&lt;p&gt;上部メニューから「&lt;strong&gt;Tools&lt;/strong&gt;」→「&lt;strong&gt;Build System&lt;/strong&gt;」→「&lt;strong&gt;New build System…&lt;/strong&gt;」をクリック。
&lt;a href=&#34;http://lh3.ggpht.com/-xe3nYEk3xuE/UfIq2T7Dy2I/AAAAAAAADU4/aocJFypPvFk/s617/2013-07-26_161757.png&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;aligncenter&#34; alt=&#34;New build System…をクリック&#34; src=&#34;http://lh3.ggpht.com/-xe3nYEk3xuE/UfIq2T7Dy2I/AAAAAAAADU4/aocJFypPvFk/s617/2013-07-26_161757.png&#34; /&gt;&lt;/a&gt;
すると「.sublime-build」という拡張子で設定ファイルが開くので、&lt;a href=&#34;http://drzaus.com/snippet/standalone-scss-compiler-for-sass-in-sublime-text-2&#34; target=&#34;_blank&#34;&gt;zausさんのエントリー&lt;/a&gt;下部にある以下のコードをそのままコピペ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;{
	&amp;quot;cmd&amp;quot;: [&amp;quot;Sassifier.exe&amp;quot;, &amp;quot;$file&amp;quot;],
	&amp;quot;working_dir&amp;quot;: &amp;quot;$packages/SASS/Sassifier&amp;quot;,
	&amp;quot;selector&amp;quot;: &amp;quot;source.sass&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そして保存する時のフォルダとファイル名が決まってて、以下の中に保存。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;[Sublime Text 2 本体のフォルダ]\Data\Packages\Sass\SASS.sublime-build&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;「Sass」というフォルダは無ければ作る。&lt;/p&gt;

&lt;p&gt;加えて、さっき解凍した「Sassifier」フォルダも、この「Sass」フォルダにまるごとコピー（＝インストール）。
フォルダ構成をまとめると、以下のようになる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;[Sublime Text 2 本体のフォルダ]
└ Data/
　└ Packages/
　　└ Sass/
　　　├ Sassifier/
　　　└ SASS.sublime-build
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これが整うと、Sublime Text 2 の上部メニューから「&lt;strong&gt;Tools&lt;/strong&gt;」→「&lt;strong&gt;Build System&lt;/strong&gt;」→「&lt;strong&gt;SASS&lt;/strong&gt;」が選択できるようになってると思う。&lt;/p&gt;

&lt;h2 id=&#34;うごかす:35c0bb3004c21201b933a52151593fd0&#34;&gt;うごかす&lt;/h2&gt;

&lt;p&gt;そしたら試しにscssファイルを変換してみる。
「test.scss」というファイルを Sublime Text 2 で開き、サンプルとして以下のように書いてみた。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;#main {
	width:600px;
	a {
		text-decoration:none;
		&amp;amp;:hover{
			text-decoration:underline;
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、これを開いたまま、Sublime Text 2 の上部メニューから「&lt;strong&gt;Tools&lt;/strong&gt;」→「&lt;strong&gt;Build System&lt;/strong&gt;」→「&lt;strong&gt;SASS&lt;/strong&gt;」を選択後、「&lt;strong&gt;Ctrl&lt;/strong&gt;」＋「&lt;strong&gt;B&lt;/strong&gt;」キーを押す。
そしたら！うまいこと「test.css」というのができたっぽいです。
&lt;a href=&#34;http://lh5.ggpht.com/-rOWu-NZCVEc/UfIyDO5u-AI/AAAAAAAADVk/AMcmf9RzgHk/s593/2013-07-26_172332.png&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;aligncenter&#34; alt=&#34;CSSファイルが生成された&#34; src=&#34;http://lh5.ggpht.com/-rOWu-NZCVEc/UfIyDO5u-AI/AAAAAAAADVk/AMcmf9RzgHk/s593/2013-07-26_172332.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;生成された「test.css」の中身はこんなんだった。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;/* -------------------------------------------------------------------------
 * !!! AUTOMATICALLY GENERATED CODE !!!
 * -------------------------------------------------------------------------
 * This file was automatically generated by the Sassifier compiler.
 * Compiled on:  2013/07/26 17:21:47
 */
#main {
  width: 600px; }
  #main a {
    text-decoration: none; }
    #main a:hover {
      text-decoration: underline; }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ちなみに文法が間違ってたりすると「Sassifier」が強制終了したりすることがあったのでちょっと怖い(笑)。
あとRubyとか使う本家と違いがあるのかとか、scssフォルダからcssフォルダに生成（自動生成先の指定）できるのかとか、そこらへんはまだよくわからんけど、とりあえずportable版でも動くものがあるってことで。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
